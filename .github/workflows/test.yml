name: Test Workflow

on:
  workflow_call:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Create .env.test file
        run: |
          echo NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }} >> .env.test
          echo NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }} >> .env.test
          echo CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }} >> .env.test
          echo NEXT_PUBLIC_CLERK_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }} >> .env.test
          echo NEXT_PUBLIC_CLERK_SIGN_UP_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }} >> .env.test
          echo NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL }} >> .env.test
          echo NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=${{ secrets.NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL }} >> .env.test
          echo ALGORITHM=${{ secrets.ALGORITHM }} >> .env.test
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env.test
          echo IV_LENGTH=${{ secrets.IV_LENGTH }} >> .env.test
          echo NEXT_PUBLIC_WEBSOCKET_URL=${{ secrets.NEXT_PUBLIC_WEBSOCKET_URL }} >> .env.test
          echo TEST_USER_ID=${{ secrets.TEST_USER_ID }} >> .env.test
          echo TEST_USER_NAME=${{ secrets.TEST_USER_NAME }} >> .env.test
          echo TEST_USER_EMAIL=${{ secrets.TEST_USER_EMAIL }} >> .env.test
          echo TEST_USER_PASSWORD=${{ secrets.TEST_USER_PASSWORD }} >> .env.test
          echo TEST_NODE_ENV=${{ secrets.TEST_NODE_ENV }} >> .env.test

      # - name: Restore storageState.json from GitHub Secret
      #   run: |
      #     echo '${{ secrets.STORAGE_STATE }}' > storageState.json

      - name: Install dependencies
        run: npm install

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests (unauth)
        run: npm run test:e2e:unauth

      - name: Save Playwright HTML Report (unauth)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-unauth
          path: playwright-report/

      - name: Run Playwright tests (login)
        run: npm run test:e2e:login

      - name: Save Playwright HTML Report (login)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-login
          path: playwright-report/

      - name: Run Playwright tests (auth)
        run: npm run test:e2e:auth

      - name: Save Playwright HTML Report (auth)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-auth
          path: playwright-report/

      - name: Run Playwright tests (logout)
        run: npm run test:e2e:logout

      - name: Save Playwright HTML Report (logout)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-logout
          path: playwright-report/

      - name: Remove .env.test file
        if: always()
        run: rm .env.test

      - name: Remove storageState.json file
        if: always()
        run: rm storageState.json
